name: "godot-ci export"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: ticket-to-rio
  PROJECT_PATH: ticket-to-rio 

jobs:
  build-windows:
    name: Build Windows Executable
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Godot Templates and User Config
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Windows Build
        run: |
          echo "Creating build directory for Windows..."
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
          echo "Godot export command for Windows finished."

      # - name: Verify Windows Build Output
      #   run: |
      #     echo "Verifying Windows build output..."
      #     echo "Listing contents of $GITHUB_WORKSPACE/build/windows/:"
      #     ls -lah "$GITHUB_WORKSPACE/build/windows/"
          
      #     WINDOWS_EXE_PATH="$GITHUB_WORKSPACE/build/windows/$EXPORT_NAME.exe"
      #     echo "Expected Windows executable at: $WINDOWS_EXE_PATH"
      #     if [ -f "$WINDOWS_EXE_PATH" ]; then
      #       echo "SUCCESS: Windows executable found at $WINDOWS_EXE_PATH."
      #     else
      #       echo "ERROR: Windows executable NOT FOUND at $WINDOWS_EXE_PATH."
            
            
      #     fi

      - name: Upload Windows Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable
          
          path: build/windows
          if-no-files-found: error 
          retention-days: 1

  build-linux:
    name: Build Linux Executable
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Godot Templates and User Config
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Linux Build
        run: |
          echo "Creating build directory for Linux..."
          mkdir -v -p build/linux

          EXPORT_DIR="$(readlink -f build)"
          
          echo "Changing directory to project path: $PROJECT_PATH"
          cd "$PROJECT_PATH"
          
          echo "Current directory: $(pwd)"
          echo "Attempting to export Linux/X11 to $EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
          godot --headless --verbose --export-release "Linux/X11" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
          echo "Godot export command for Linux finished."

      # - name: Verify Linux Build Output
      #   run: |
      #     echo "Verifying Linux build output..."
      #     echo "Listing contents of $GITHUB_WORKSPACE/build/linux/:"
      #     ls -lah "$GITHUB_WORKSPACE/build/linux/"
          
      #     LINUX_EXE_PATH="$GITHUB_WORKSPACE/build/linux/$EXPORT_NAME.x86_64"
      #     echo "Expected Linux executable at: $LINUX_EXE_PATH"
      #     if [ -f "$LINUX_EXE_PATH" ]; then
      #       echo "SUCCESS: Linux executable found at $LINUX_EXE_PATH."
      #     else
      #       echo "ERROR: Linux executable NOT FOUND at $LINUX_EXE_PATH."
            
      #     fi
          
      - name: Upload Linux Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-executable
          path: build/linux
          if-no-files-found: error 
          retention-days: 1

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-22.04
    needs: [build-windows, build-linux] 
    
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write 
    steps:
      - name: Download Windows Executable Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-executable
          path: ./dist/windows 

      - name: Download Linux Executable Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-executable
          path: ./dist/linux 

      - name: Verify Downloaded Artifacts
        run: |
          echo "Verifying downloaded artifacts..."
          echo "Files in ./dist directory:"
          ls -R ./dist
          echo "Expected Windows executable: ./dist/windows/${EXPORT_NAME}.exe" 
          if [ ! -f "./dist/windows/${EXPORT_NAME}.exe" ]; then echo "ERROR: Downloaded Windows exe missing!"; fi
          echo "Expected Linux executable: ./dist/linux/${EXPORT_NAME}.x86_64"   
          if [ ! -f "./dist/linux/${EXPORT_NAME}.x86_64" ]; then echo "ERROR: Downloaded Linux exe missing!"; fi

      - name: Create GitHub Release and Upload Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          
          files: |
            ./dist/windows/${{ env.EXPORT_NAME }}.exe
            ./dist/linux/${{ env.EXPORT_NAME }}.x86_64
          name: "Ticket to Rio - V${{ github.run_number }}" 
          tag_name: "Ticket-to-Rio-V${{ github.run_number }}" 
          body: |
            Automated build from branch ${{ github.ref_name }}. Includes Windows and Linux builds.
            Commit: ${{ github.sha }}
            Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          draft: false      
          prerelease: true  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 